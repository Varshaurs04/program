maven project- war
open in vs code- project

3a:

FROM tomcat:9.0
RUN rm -rf /usr/local/tomcat/webapps/ROOT.war
COPY /target/sample.war /usr/local/tomcat/webapps/ROOT.war
EXPOSE 8080

docker build -t sample-app .
docker run -d -p 8095:8080 sample-app;


3b:

Dockerfile:

FROM python:3.12-slim
WORKDIR /app
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt
COPY app.py .
EXPOSE 5000
CMD ["python", "app.py"]

app.py(app1):

from flask import Flask
app = Flask(__name__)
@app.route('/')
def hello():
    return "Hello from App 1!"
if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)


app.py(app2):

import requests
response = requests.get("http://app1:5000/")
print("Response from App 1:", response.text)

docker-compose.yml:

version: '3.9'
services:
  app1:
    build: ./app1
    networks:
      - app-network
    ports:
      - "5000:5000"
  app2:
    build: ./app2
    networks:
      - app-network
    depends_on:
      - app1
networks:
  app-network:
    driver: bridge


docker-compose build
docker-compose up
